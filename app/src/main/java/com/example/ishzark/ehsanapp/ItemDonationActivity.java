package com.example.ishzark.ehsanapp;import android.app.ProgressDialog;import android.content.ContentResolver;import android.content.Intent;import android.graphics.Bitmap;import android.net.Uri;import android.os.Build;import android.os.Bundle;import android.os.Handler;import android.provider.MediaStore;import android.support.annotation.NonNull;import android.support.annotation.Nullable;import android.support.v7.app.AppCompatActivity;import android.util.Log;import android.view.View;import android.webkit.MimeTypeMap;import android.widget.AdapterView;import android.widget.ArrayAdapter;import android.widget.Button;import android.widget.CheckBox;import android.widget.EditText;import android.widget.ImageView;import android.widget.ProgressBar;import android.widget.Spinner;import android.widget.TextView;import android.widget.Toast;import com.google.android.gms.tasks.OnCompleteListener;import com.google.android.gms.tasks.OnFailureListener;import com.google.android.gms.tasks.OnSuccessListener;import com.google.android.gms.tasks.Task;import com.google.firebase.auth.FirebaseAuth;import com.google.firebase.auth.FirebaseUser;import com.google.firebase.database.DataSnapshot;import com.google.firebase.database.DatabaseError;import com.google.firebase.database.DatabaseReference;import com.google.firebase.database.FirebaseDatabase;import com.google.firebase.database.ValueEventListener;import com.google.firebase.storage.FirebaseStorage;import com.google.firebase.storage.StorageReference;import com.google.firebase.storage.StorageTask;import com.google.firebase.storage.UploadTask;import com.loopj.android.http.JsonHttpResponseHandler;import com.loopj.android.http.RequestParams;import com.squareup.picasso.Picasso;import java.io.IOException;import java.text.SimpleDateFormat;import java.util.Date;import java.util.Locale;public class ItemDonationActivity extends AppCompatActivity {    private static final String URL = "https://mobily.ws/api/msgSend.php";    private Button choosebtn;private ImageView imageView;private Uri filePath;private int PICK_IMAGE_REQUEST=71;private Button donatebtn;private  String donorname;private EditText number;private EditText detials;public String chosendonationtype;public String chosenitemstatus;private FirebaseAuth auth;FirebaseStorage storage;StorageReference storageReference;private static final String TAG = "ItemDonaationActivity";private CheckBox agreementcb;public String date;public  FirebaseUser user;private TextView agreement ;private ProgressBar prgressBar; String Username = "mariamedu"; String Password="ehsan2019";  String Sender= "Ehsan"; String Message ="لقد تم استلام طلب تبرعك وسيتم التواصل معك خلال ٢-٣ايام عمل";private StorageTask mUploadTask;    DatabaseReference RequestRef=FirebaseDatabase.getInstance().getReference("Items");    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.itemdonation);        prgressBar=findViewById(R.id.progressBar3);        number=findViewById(R.id.numberofitems);        detials=findViewById(R.id.detailstext);        agreementcb=findViewById(R.id.agreementCb);        date=new SimpleDateFormat("yyyy-MM-dd", Locale.getDefault()).format(new Date());         auth = FirebaseAuth.getInstance();          user = auth.getCurrentUser();          agreement=findViewById(R.id.agreementview);          agreement.setOnClickListener(new View.OnClickListener() {              @Override              public void onClick(View v) {                    startActivity(new Intent(ItemDonationActivity.this,Pop.class));              }          });        final Spinner spinner2 = findViewById(R.id.itemstatusspinner);///////////////////////////////Donation Type Spinner/////////////////////////////////        final Spinner spinner = findViewById(R.id.donationtypespinner);        String[] types=getResources().getStringArray(R.array.donationtype_array);        ArrayAdapter<String> adapter=new ArrayAdapter<String>(this,R.layout.citycpinnerlayout,R.id.listtext, types);        spinner.setAdapter(adapter);        spinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {            @Override            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {                chosendonationtype=String.valueOf(parent.getItemAtPosition(position));                if(chosendonationtype.equals("طعام جاف")){                    spinner2.setEnabled(false);                    spinner2.setAlpha(0.4f);                    spinner2.setSelection(1);                }else{                    spinner2.setEnabled(true);                    spinner2.setAlpha(1.0f);                }            }            @Override            public void onNothingSelected(AdapterView<?> parent) {                chosendonationtype=String.valueOf(parent.getItemAtPosition(0));            }        });///////////////////////////////Item Status Spinner/////////////////////////////////        String[] status=getResources().getStringArray(R.array.item_status_array);        ArrayAdapter<String> adapter2=new ArrayAdapter<String>(this,R.layout.citycpinnerlayout,R.id.listtext, status);        spinner2.setAdapter(adapter2);        spinner2.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {            @Override            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {                chosenitemstatus=String.valueOf(parent.getItemAtPosition(position));            }            @Override            public void onNothingSelected(AdapterView<?> parent) {                chosenitemstatus=String.valueOf(parent.getItemAtPosition(0));            }        });        choosebtn= findViewById(R.id.upload);        donatebtn=findViewById(R.id.donatebtn);        imageView= findViewById(R.id.uploadedimage);        storage=FirebaseStorage.getInstance();        storageReference=storage.getReference();        choosebtn.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                chooseImage();            }        });        donatebtn.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                if(agreementcb.isChecked()){                    if(mUploadTask!=null&&mUploadTask.isInProgress()){                    }else{                        uploadRequest();                        //uploadImage();                    }                }else                {                    Toast.makeText(ItemDonationActivity.this,R.string.serviceagreement,Toast.LENGTH_SHORT).show();                }            }        });    }    private String getFileExtension(Uri uri)    {        ContentResolver contentResolver=getContentResolver();        MimeTypeMap  mimeTypeMap=MimeTypeMap.getSingleton();        return mimeTypeMap.getExtensionFromMimeType(contentResolver.getType(uri));    }    private void uploadImage() {    }    public void uploadRequest() {        //Create request        final DonateItems Newrequest = new DonateItems();        //Upload request        if (filePath != null) {            final DatabaseReference refe = FirebaseDatabase.getInstance().getReference().child("Donors");            refe.addListenerForSingleValueEvent(new ValueEventListener() {                @Override                public void onDataChange(@NonNull DataSnapshot dataSnapshot) {                    boolean found = false;                    //final String userID = user.getUid();                    final String mobile = user.getPhoneNumber();                    for (DataSnapshot child : dataSnapshot.getChildren()) {                        String phone = child.child("phone").getValue().toString();                        //   Log.d(TAG,"phone found"+mobile.replace("+966",""));                        if (phone.equals(mobile.replace("+966", ""))) {                            donorname = child.child("name").getValue().toString();                            // Log.d(TAG,"name found"+donorname);                            found = true;                        }                    }                    if (found) {                        Intent intent = getIntent();                        String location = intent.getStringExtra("chosencity");                        String numberofitemes = number.getText().toString().trim();                        String detailofitems = detials.getText().toString();                        //Error handling                        if (numberofitemes.isEmpty()) {                            number.setError(getString(R.string.input_error_name));                            number.requestFocus();                            return;                        }                        Newrequest.setPhone(mobile);                        Newrequest.setItem_type(chosendonationtype);                        Newrequest.setItem_status(chosenitemstatus);                        Newrequest.setItemDetails(detailofitems);                        Newrequest.setDonor_name(donorname.toString());                        Newrequest.setQuantity(numberofitemes);                        Newrequest.setLocation(location);                        Newrequest.setDate(date.toString());                        Newrequest.setRequestStatus(getString(R.string.DefaultStatus));                        //   Log.d(TAG,"Founded details"+mobile+chosendonationtype+chosenitemstatus+detailofitems);                        String UserId = FirebaseAuth.getInstance().getCurrentUser().getUid();                        //Upload the rest of request                        prgressBar.setVisibility(View.VISIBLE);                        final StorageReference filereference = storageReference.child(System.currentTimeMillis() + "." + getFileExtension(filePath));                        mUploadTask = filereference.putFile(filePath).addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {                            @Override                            public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {                                filereference.getDownloadUrl().addOnSuccessListener(new OnSuccessListener<Uri>() {                                    @Override                                    public void onSuccess(Uri uri) {                                        Newrequest.setUrl(uri.toString());                                        final String RequestKey = RequestRef.push().getKey();                                        RequestRef.child(RequestKey).setValue(Newrequest).addOnCompleteListener(new OnCompleteListener<Void>() {                                                                                                                    @Override                                                                                                                    public void onComplete(@NonNull Task<Void> task) {                                                                                                                        if (task.isSuccessful()) {                                                                                                                             sendSMS(donorname);                                                                                                                            prgressBar.setVisibility(View.GONE);                                                                                                                            startActivity(new Intent(ItemDonationActivity.this, GifActivity.class));                                                                                                                            finish();                                                                                                                        }else{                                                                                                                            //RequestRef.child(RequestKey).child("url").setValue(storageReference.getDownloadUrl().getResult().toString());                                                                                                                            Toast.makeText(ItemDonationActivity.this, R.string.notuploading, Toast.LENGTH_SHORT).show();}                                                                                                                    }                                                                                                                }                                        );                                    }                                });                            }                        });                    }                }                @Override                public void onCancelled(@NonNull DatabaseError databaseError) {                }                //            });        } else {            Toast.makeText(ItemDonationActivity.this, "الرجاء إرفاق صورة", Toast.LENGTH_SHORT).show();        }    }    private void sendSMS(String name) {        String mobile=user.getPhoneNumber();        final RequestParams params=new RequestParams();         Log.d(TAG,"mobile"+mobile.replace("+","").toString());        params.add("mobile",Username);        params.add("password",Password);        params.add("returnJson","1");        params.add("sender",Sender);        params.add("msg", Utils.convertUnicode(name+""+Message));        params.add("numbers",mobile.replace("+",""));        params.add("applicationType","68");       params.add("dateSend","03/12/2019");        params.add("timeSend","3:30:00");        MyConnectionType.get("https://mobily.ws/api/msgSend.php",params,new JsonHttpResponseHandler()                {                    @Override                    public void onSuccess(int statusCode, cz.msebera.android.httpclient.Header[] headers, org.json.JSONObject response) {                        Log.d(TAG, "objapi"+response.toString());                       // Toast.makeText(ItemDonationActivity.this, "sms sent", Toast.LENGTH_SHORT).show();                    }                }        );    }            private void chooseImage() {        Intent intent=new Intent();        intent.setType("image/*");        intent.setAction(intent.ACTION_GET_CONTENT);        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP_MR1) {            startActivityForResult(intent.createChooser(intent,"select Picture"),PICK_IMAGE_REQUEST);        }    }    @Override    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {        super.onActivityResult(requestCode, resultCode, data);        if(requestCode==PICK_IMAGE_REQUEST && resultCode==RESULT_OK                && data !=null && data.getData() != null)        {            filePath=data.getData();            Picasso.with(this).load(filePath).into(imageView);/*            try {                Bitmap bitmap = MediaStore.Images.Media.getBitmap(getContentResolver(),filePath);                imageView.setImageBitmap(bitmap);            }            catch (IOException e)            {             e.printStackTrace();            }            */        }    }}